name: Create Discussion for New YAML Configs

on:
  push:
    branches:
      - staging
      - discussion_workflow
    paths:
      - 'cfg/**/*.yaml'

jobs:
  create-discussion:
    runs-on: ubuntu-latest
    permissions:
      discussions: write
      contents: write
    
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML

      - name: Install GitHub CLI
        run: |
          (type -p wget >/dev/null || (sudo apt update && sudo apt-get install wget -y)) \
            && sudo mkdir -p -m 755 /etc/apt/keyrings \
            && out=$(mktemp) && wget -nv -O$out https://cli.github.com/packages/githubcli-archive-keyring.gpg \
            && cat $out | sudo tee /etc/apt/keyrings/githubcli-archive-keyring.gpg > /dev/null \
            && sudo chmod go+r /etc/apt/keyrings/githubcli-archive-keyring.gpg \
            && echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null \
            && sudo apt update \
            && sudo apt install gh -y

      - name: Process new YAML files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep "^cfg/.*\.yaml$" | while read file; do
            # Get folder and filename
            folder=$(dirname "$file" | xargs basename)
            filename=$(basename "$file")
            discussion_title="$folder/$filename"

            # Check if discussion already exists
            existing_discussion=$(gh api graphql -f query='
              query($owner:String!, $repo:String!, $search:String!) {
                repository(owner:$owner, name:$repo) {
                  discussions(first:1, query:$search) {
                    nodes {
                      title
                    }
                  }
                }
              }' -f owner=$GITHUB_REPOSITORY_OWNER -f repo=$(basename $GITHUB_REPOSITORY) -f search="$discussion_title" --jq '.data.repository.discussions.nodes[0].title')

            if [ -z "$existing_discussion" ]; then
              # Parse YAML and extract metadata
              python - <<EOF
              import yaml
              import os

              with open('$file', 'r') as f:
                  config = yaml.safe_load(f)

              metadata = {k: v for k, v in config.items() if k in ['author', 'task', 'keywords', 'description', 'flops', 'parameters', 'min_version']}

              body = f"Discussion for \`{discussion_title}\`\n\n### Metadata\n"
              for key, value in metadata.items():
                  if key == 'author':
                      value = f"@{value}"
                  body += f"- **{key}:** {value}\n"

              # Write body to temporary file
              with open('discussion_body.txt', 'w') as f:
                  f.write(body)
              EOF

              # Read the discussion body from the temporary file
              DISCUSSION_BODY=$(cat discussion_body.txt)

              # Create a new discussion using GitHub CLI
              gh api repos/$GITHUB_REPOSITORY/discussions -f title="$discussion_title" -F body="$DISCUSSION_BODY"
            else
              echo "Discussion '$discussion_title' already exists. Skipping."
            fi
          done