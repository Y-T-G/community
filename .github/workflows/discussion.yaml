name: Create Discussion for New YAML Configs

on:
  push:
    branches:
      - staging
    paths:
      - 'cfg/**/*.yaml'

jobs:
  create-discussion:
    runs-on: ubuntu-latest
    permissions:
      discussions: write
      contents: write
    
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install PyYAML

      - name: Install GitHub CLI
        run: |
          sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-key C99B11DEB97541F0
          sudo apt-add-repository https://cli.github.com/packages
          sudo apt update
          sudo apt install gh -y

      - name: Process new YAML files
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY_OWNER: ${{ github.repository_owner }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep "^cfg/.*\.yaml$" | while read file; do
            # Get folder and filename
            folder=$(dirname "$file" | xargs basename)
            filename=$(basename "$file")
            discussion_title="$folder/$filename"
            
            # Check if discussion already exists
            existing_discussion=$(gh api graphql -f query='
              query($owner:String!, $repo:String!, $search:String!) {
                repository(owner:$owner, name:$repo) {
                  discussions(first:1, query:$search) {
                    nodes {
                      title
                    }
                  }
                }
              }' -f owner=$GITHUB_REPOSITORY_OWNER -f repo=$(basename $GITHUB_REPOSITORY) -f search="$discussion_title" --jq '.data.repository.discussions.nodes[0].title')
            
              if [ -z "$existing_discussion" ]; then
                # Parse YAML and extract metadata
                python - <<EOF
                import yaml
                import os
                
                with open('$file', 'r') as f:
                    config = yaml.safe_load(f)
                
                metadata = {k: v for k, v in config.items() if k in ['author', 'task', 'keywords', 'description', 'flops', 'parameters', 'min_version']}
                
                body = f"Discussion for \`{discussion_title}\`\n\n### Metadata\n"
                for key, value in metadata.items():
                    if key == 'author':
                        value = f"@{value}"
                    body += f"- **{key}:** {value}\n"
                
                # Write body to temporary file
                with open('discussion_body.txt', 'w') as f:
                    f.write(body)
                EOF
              
              # Create discussion
              discussion_url=$(gh discussion create \
                --title "$discussion_title" \
                --body-file discussion_body.txt \
                --category "General")
              
              # Update YAML with discussion link
              python - <<EOF
              import yaml
              import os
              
              with open('$file', 'r') as f:
                  config = yaml.safe_load(f)
              
              # Find position after min_version
              lines = []
              with open('$file', 'r') as f:
                  lines = f.readlines()
              
              new_lines = []
              min_version_found = False
              for line in lines:
                  new_lines.append(line)
                  if 'min_version:' in line and not min_version_found:
                      new_lines.append(f"discussion: {discussion_url}\n")
                      min_version_found = True
              
              with open('$file', 'w') as f:
                  f.writelines(new_lines)
              EOF
              
              # Commit and push changes
              git config --global user.name "GitHub Action"
              git config --global user.email "action@github.com"
              git add "$file"
              git commit -m "Add discussion link to $discussion_title"
              git push
            fi
          done